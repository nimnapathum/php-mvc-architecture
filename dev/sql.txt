CREATE DATABASE practical_app;

CREATE TABLE Users(
    id INT AUTO_INCREMENT,
    profile_image VARCHAR(255),
    name VARCHAR(255),
    email VARCHAR(255),
    password VARCHAR(255),
    create_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(id)
);

CREATE TABLE Post(
    id INT AUTO_INCREMENT,
    user_id INT,
    image VARCHAR(255),
    title VARCHAR(255),
    body TEXT,
    likes INT DEFAULT 0,
    dislikes INT DEFAULT 0,
    views INT DEFAULT 0,
    create_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(id),
    FOREIGN KEY (user_id) REFERENCES Users(id) ON DELETE CASCADE
);

CREATE TABLE postsInteractions(
    interaction_id INT AUTO_INCREMENT,
    post_id INT,
    user_id INT,
    interaction VARCHAR(255),
    PRIMARY KEY(interaction_id),
    FOREIGN KEY(post_id) REFERENCES post(id) ON DELETE CASCADE,
    FOREIGN KEY(user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE comments(
    comment_id INT AUTO_INCREMENT,
    post_id INT,
    user_id INT,
    content TEXT NOT NULL,
    likes INT DEFAULT 0,
    dislikes INT DEFAULT 0,
    cmt_create_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(comment_id),
    FOREIGN KEY(post_id) REFERENCES post(id) ON DELETE CASCADE,
    FOREIGN KEY(user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE VIEW v_posts AS 
    SELECT 
    post.id AS post_id,
    users.id AS user_id,
    users.profile_image as profile_image,
    users.name AS user_name,
    post.image AS image,
    post.title AS title,
    post.body AS body,
    post.likes AS likes,
    post.dislikes AS dislikes,
    post.views AS views,
    post.create_at AS post_create_at,
    users.create_at AS user_create_at
    FROM post INNER JOIN users
    ON post.user_id = users.id
    ORDER BY post.create_at DESC;


CREATE TABLE commentInteractions(
    interaction_id INT AUTO_INCREMENT,
    comment_id INT,
    user_id INT,
    interaction VARCHAR(255),
    PRIMARY KEY(interaction_id),
    FOREIGN KEY(comment_id) REFERENCES comments(comment_id) ON DELETE CASCADE,
    FOREIGN KEY(user_id) REFERENCES users(id) ON DELETE CASCADE
);


CREATE VIEW v_comments AS 
    SELECT 
    comments.comment_id AS comment_id,
    comments.post_id AS post_id,
    users.id AS user_id,
    users.profile_image as profile_image,
    users.name AS user_name,
    comments.content AS content,
    comments.likes AS likes,
    comments.dislikes AS dislikes,
    comments.cmt_create_at AS cmt_create_at
    FROM comments INNER JOIN users
    ON comments.user_id = users.id
    ORDER BY comments.cmt_create_at DESC;
